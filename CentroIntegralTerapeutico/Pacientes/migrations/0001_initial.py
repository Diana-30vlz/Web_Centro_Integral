# Generated by Django 5.2.5 on 2025-08-31 19:40

import Pacientes.models
import datetime
import django.contrib.auth.models
import django.contrib.auth.validators
import django.contrib.postgres.fields
import django.core.validators
import django.db.models.deletion
import django.utils.timezone
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='CustomUser',
            fields=[
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=150, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(blank=True, max_length=254, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('user_type', models.CharField(choices=[('doctor', 'Doctor'), ('farmacia', 'Farmacia')], default='doctor', max_length=10)),
                ('recovery_nip', models.CharField(blank=True, help_text='Introduce un NIP de 4 dígitos para recuperar tu cuenta.', max_length=4, null=True, unique=True, validators=[django.core.validators.RegexValidator('^\\d{4}$', 'El NIP debe ser un número de 4 dígitos.')])),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='customuser_set', related_query_name='customuser', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='customuser_set', related_query_name='customuser', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'user',
                'verbose_name_plural': 'users',
                'abstract': False,
            },
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Paciente',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('nombre', models.CharField(max_length=100)),
                ('apellido_paterno', models.CharField(max_length=100)),
                ('apellido_materno', models.CharField(blank=True, max_length=100, null=True)),
                ('fecha_nacimiento', models.DateField()),
                ('genero', models.CharField(choices=[('Masculino', 'Masculino'), ('Femenino', 'Femenino'), ('Otro', 'Otro')], max_length=10)),
                ('telefono', models.CharField(blank=True, max_length=20, null=True)),
                ('email', models.EmailField(blank=True, max_length=254, null=True)),
                ('direccion', models.TextField(blank=True, null=True)),
                ('fecha_registro', models.DateTimeField(auto_now_add=True)),
                ('numero_expediente', models.CharField(blank=True, max_length=50, null=True, unique=True)),
            ],
            options={
                'verbose_name': 'Paciente',
                'verbose_name_plural': 'Pacientes',
            },
        ),
        migrations.CreateModel(
            name='Doctor',
            fields=[
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, primary_key=True, related_name='doctor_profile', serialize=False, to=settings.AUTH_USER_MODEL, verbose_name='Usuario Asociado')),
                ('especialidad', models.CharField(blank=True, max_length=100, null=True, verbose_name='Especialidad')),
                ('telefono_consultorio', models.CharField(blank=True, max_length=20, null=True, verbose_name='Teléfono del Consultorio')),
            ],
            options={
                'verbose_name': 'Doctor',
                'verbose_name_plural': 'Doctores',
            },
        ),
        migrations.CreateModel(
            name='HistoriaClinicaMusculoEsqueletico',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('fecha_registro', models.DateField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('comentarios', models.TextField(blank=True, null=True, verbose_name='ComentariosAdicionales')),
                ('GradoInstruccion', models.CharField(blank=True, max_length=255, null=True)),
                ('inmunizaciones_o_vacunas', models.TextField(blank=True, null=True)),
                ('baño_diario', models.CharField(blank=True, max_length=100, null=True)),
                ('aseo_dental', models.CharField(blank=True, max_length=100, null=True)),
                ('lavado_manos_antes_comer', models.CharField(blank=True, max_length=100, null=True)),
                ('lavado_manos_despues', models.CharField(blank=True, max_length=100, null=True)),
                ('tamanio_vivienda', models.CharField(blank=True, choices=[('-----', '-----'), ('1_cuarto', '1 Cuarto'), ('2_cuartos', '2 Cuartos'), ('3_cuartos', '3 Cuartos'), ('4_cuartos', '4 Cuartos'), ('5_o_mas_cuartos', '5 o más Cuartos')], default=Pacientes.models.get_default_servicios, max_length=100, null=True)),
                ('tipo_vivienda', models.CharField(blank=True, choices=[('Casa independiente (particular)', 'Casa independiente (particular)'), ('Departamento en edificio o condominio', 'Departamento en edificio o condominio'), ('Vivienda en vecindad', 'Vivienda en vecindad'), ('Cuarto en vivienda compartida', 'Cuarto en vivienda compartida'), ('Vivienda en local no construido para habitación', 'Vivienda en local no construido para habitación'), ('Vivienda móvil (casa rodante, barco, etc.)', 'Vivienda móvil (casa rodante, barco, etc.)'), ('Refugio (albergue, casa hogar, etc.)', 'Refugio (albergue, casa hogar, etc.)'), ('otro', 'Otro tipo de vivienda')], default=Pacientes.models.get_default_servicios, max_length=100, null=True)),
                ('servicio_vivienda', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('-----', '-----'), ('agua', 'Agua Potable'), ('luz', 'Electricidad'), ('gas', 'Gas Natural'), ('internet', 'Internet'), ('telefonia', 'Telefonía Fija'), ('alcantarillado', 'Alcantarillado'), ('recoleccion_basura', 'Recolección de Basura')], max_length=50), blank=True, null=True, size=None, verbose_name='Servicios con los que cuenta la vivienda')),
                ('Personas_que_habitan', models.CharField(blank=True, max_length=100, null=True, verbose_name='Personas que habitan en la vivienda')),
                ('Parentesco', models.CharField(blank=True, max_length=100, null=True, verbose_name='Parentesco')),
                ('motivo_consulta', models.TextField()),
                ('enfermedad_actual', models.CharField(blank=True, max_length=50, null=True)),
                ('Antecedentes_familiares', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('-----', '-----'), ('Tuberculosis', 'Tuberculosis'), ('Diabetes', 'Diabetes'), ('Hipertensión', 'Hipertensión'), ('Obesidad', 'Obesidad'), ('Malformaciones', 'Malformaciones Congenitas'), ('Cáncer', 'Cáncer'), ('Alergias', 'Alergias'), ('Cardiacas', 'Enfermedades Cardiacas'), ('Psiquiátricas', 'Enfermdedades Psiquiátricas'), ('Reumaticas', 'Enfermedades Reumaticas'), ('Tumores', 'Tumores'), ('Luéticos', 'Luéticos'), ('Otros', 'otros')], default=Pacientes.models.get_default_servicios, max_length=50, null=True, verbose_name='Antecendentes Familiares'), size=None)),
                ('habitos_toxicos', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('-----', '-----'), ('Alcohol', 'Alcohol'), ('Tabaquismo', 'Tabaquismo'), ('Drogas', 'Drogas'), ('Infusiones', 'Infusiones'), ('No aplica', 'No aplica')], default=Pacientes.models.get_default_servicios, max_length=50, null=True, verbose_name='Hábitos tóxicos'), size=None)),
                ('Allimentación', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('-----', '-----'), ('Carnivora', 'Carnivora'), ('vegetariana', 'Vegetariana'), ('vegana', 'Vegana (no productos animales)'), ('pescetariana', 'Pescetariana (no carne, sí pescado)'), ('flexitariana', 'Flexitariana (principalmente vegetariana, poca carne)'), ('keto', 'Cetogénica (Keto)'), ('paleo', 'Paleo'), ('otra', 'Otra (especifique)'), ('no_aplica', 'No aplica / No sabe / No responde')], default=Pacientes.models.get_default_servicios, max_length=50, null=True), size=None)),
                ('Ingesta_Agua', models.IntegerField(blank=True, null=True, verbose_name='Ingesta de agua litros')),
                ('Cantidad_veces_Orina', models.IntegerField(blank=True, null=True, verbose_name='Cantidad de veces de orina')),
                ('Catarsis', models.CharField(blank=True, max_length=50, null=True)),
                ('Somnia', models.CharField(blank=True, max_length=50, null=True)),
                ('Infancia', models.TextField(blank=True, max_length=100, null=True)),
                ('Adulto', models.TextField(blank=True, max_length=100, null=True)),
                ('Patologias', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('-----', '-----'), ('Herpes', 'Herpes'), ('Hepatitis', 'Hepatitis'), ('HTA', 'HTA'), ('Alergias', 'Alergias'), ('Diabetes', 'Diabetes'), ('Tifoidea', 'Tifoidea'), ('TBC', 'TBC'), ('Caries', 'Caries'), ('Rubeola', 'Rubeola'), ('Neoplasis', 'Neoplasis'), ('Otros', 'Otros')], default=Pacientes.models.get_default_servicios, max_length=50, null=True), size=None)),
                ('ha_sido_operado', models.BooleanField(default=False)),
                ('fecha_operacion', models.DateField(blank=True, null=True)),
                ('traumatismo_o_fractura', models.BooleanField(blank=True, null=True)),
                ('Otro', models.TextField(blank=True, null=True)),
                ('Constitucional', models.CharField(blank=True, max_length=100, null=True, verbose_name='Constitucional')),
                ('Marcha', models.CharField(blank=True, max_length=100, null=True, verbose_name='Marcha')),
                ('Actitud', models.CharField(blank=True, max_length=100, null=True, verbose_name='Actitud')),
                ('Ubicacion', models.CharField(blank=True, max_length=100, null=True, verbose_name='Ubicación')),
                ('Impresion_general', models.CharField(blank=True, max_length=100, null=True, verbose_name='Impresión General')),
                ('FC', models.CharField(blank=True, max_length=100, null=True, verbose_name='Frecuencia Cardiaca')),
                ('TA', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tensión Arterial')),
                ('FR', models.CharField(blank=True, max_length=100, null=True, verbose_name='Frecuencia Respiratoria')),
                ('T_Auxiliar', models.CharField(blank=True, max_length=100, null=True, verbose_name='Temperatura Auxiliar')),
                ('T_rectal', models.CharField(blank=True, max_length=100, null=True, verbose_name='Temperatura Rectal')),
                ('Peso_Habitual', models.CharField(blank=True, max_length=100, null=True, verbose_name='Peso Habitual')),
                ('Peso_Actual', models.CharField(blank=True, max_length=100, null=True, verbose_name='Peso Actual')),
                ('Talla', models.CharField(blank=True, max_length=100, null=True, verbose_name='Talla')),
                ('IMC', models.CharField(blank=True, max_length=100, null=True, verbose_name='Índice de Masa Corporal')),
                ('Aspecto', models.CharField(blank=True, max_length=100, null=True, verbose_name='Aspecto')),
                ('Distribuición_pilosa', models.CharField(blank=True, max_length=100, null=True, verbose_name='Distribución pilosa')),
                ('Lesiones', models.CharField(blank=True, max_length=100, null=True, verbose_name='Lesiones')),
                ('Faneras', models.CharField(blank=True, max_length=100, null=True, verbose_name='Faneras')),
                ('Tejido_celular_subcutaneo', models.CharField(blank=True, max_length=100, null=True, verbose_name='Tejido celular subcutáneo')),
                ('Tejido_celular', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('-----', '-----'), ('lipomas', 'Lipomas'), ('Papada', 'Papada'), ('Paniculo Adiposo', 'Paniculo Adiposo'), ('Otros', 'Otros'), ('No aplica', 'No aplica')], default=Pacientes.models.get_default_servicios, max_length=100, null=True, verbose_name='Tejido celular'), size=None)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PacienteHistoriaClinicaME', to='Pacientes.paciente')),
            ],
        ),
        migrations.CreateModel(
            name='HistoriaClinica',
            fields=[
                ('id', models.AutoField(primary_key=True, serialize=False)),
                ('no_historia_clinica', models.CharField(blank=True, max_length=50, null=True, verbose_name='Número de Historia Clínica')),
                ('fecha_registro', models.DateField(auto_now_add=True, verbose_name='Fecha de Registro')),
                ('comentarios', models.TextField(blank=True, null=True, verbose_name='ComentariosAdicionales')),
                ('fecha_internacion', models.DateField(blank=True, null=True)),
                ('GradoInstruccion', models.CharField(blank=True, max_length=255, null=True)),
                ('inmunizaciones_o_vacunas', models.TextField(blank=True, null=True)),
                ('baño_diario', models.CharField(blank=True, max_length=100, null=True)),
                ('aseo_dental', models.CharField(blank=True, max_length=100, null=True)),
                ('lavado_manos_antes_comer', models.CharField(blank=True, max_length=100, null=True)),
                ('lavado_manos_despues', models.CharField(blank=True, max_length=100, null=True)),
                ('tamanio_vivienda', models.CharField(blank=True, choices=[('1_cuarto', '1 Cuarto'), ('2_cuartos', '2 Cuartos'), ('3_cuartos', '3 Cuartos'), ('4_cuartos', '4 Cuartos'), ('5_o_mas_cuartos', '5 o más Cuartos')], max_length=100, null=True)),
                ('tipo_vivienda', models.CharField(blank=True, choices=[('Casa independiente (particular)', 'Casa independiente (particular)'), ('Departamento en edificio o condominio', 'Departamento en edificio o condominio'), ('Vivienda en vecindad', 'Vivienda en vecindad'), ('Cuarto en vivienda compartida', 'Cuarto en vivienda compartida'), ('Vivienda en local no construido para habitación', 'Vivienda en local no construido para habitación'), ('Vivienda móvil (casa rodante, barco, etc.)', 'Vivienda móvil (casa rodante, barco, etc.)'), ('Refugio (albergue, casa hogar, etc.)', 'Refugio (albergue, casa hogar, etc.)'), ('otro', 'Otro tipo de vivienda')], max_length=100, null=True)),
                ('servicio_vivienda', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(choices=[('-----', '-----'), ('agua', 'Agua Potable'), ('luz', 'Electricidad'), ('gas', 'Gas Natural'), ('internet', 'Internet'), ('telefonia', 'Telefonía Fija'), ('alcantarillado', 'Alcantarillado'), ('recoleccion_basura', 'Recolección de Basura')], max_length=50), blank=True, default=Pacientes.models.get_default_servicios, null=True, size=None, verbose_name='Servicios con los que cuenta la vivienda')),
                ('motivo_consulta', models.TextField(blank=True, null=True, verbose_name='Motivo de Consulta')),
                ('enfermedad_actual', models.CharField(blank=True, max_length=50, null=True)),
                ('Antecedentes_familiares', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('-----', '-----'), ('Tuberculosis', 'Tuberculosis'), ('Diabetes', 'Diabetes'), ('Hipertensión', 'Hipertensión'), ('Obesidad', 'Obesidad'), ('Malformaciones', 'Malformaciones Congenitas'), ('Cáncer', 'Cáncer'), ('Alergias', 'Alergias'), ('Cardiacas', 'Enfermedades Cardiacas'), ('Psiquiátricas', 'Enfermdedades Psiquiátricas'), ('Reumaticas', 'Enfermedades Reumaticas'), ('Tumores', 'Tumores'), ('Luéticos', 'Luéticos'), ('Otros', 'otros')], max_length=50, verbose_name='Antecendentes Familiares'), size=None)),
                ('habitos_toxicos', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('-----', '-----'), ('Alcohol', 'Alcohol'), ('Tabaquismo', 'Tabaquismo'), ('Drogas', 'Drogas'), ('Infusiones', 'Infusiones'), ('No aplica', 'No aplica')], default=Pacientes.models.get_default_servicios, max_length=50, null=True, verbose_name='Hábitos tóxicos'), size=None)),
                ('Allimentación', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('-----', '-----'), ('Carnivora', 'Carnivora'), ('vegetariana', 'Vegetariana'), ('vegana', 'Vegana (no productos animales)'), ('pescetariana', 'Pescetariana (no carne, sí pescado)'), ('flexitariana', 'Flexitariana (principalmente vegetariana, poca carne)'), ('keto', 'Cetogénica (Keto)'), ('paleo', 'Paleo'), ('otra', 'Otra (especifique)'), ('no_aplica', 'No aplica / No sabe / No responde')], default=Pacientes.models.get_default_servicios, max_length=50, null=True), size=None)),
                ('Ingesta_Agua', models.IntegerField(blank=True, null=True, verbose_name='Ingesta de agua litros')),
                ('Cantidad_veces_Orina', models.IntegerField(blank=True, null=True, verbose_name='Cantidad de veces de orina')),
                ('Catarsis', models.CharField(blank=True, max_length=50, null=True)),
                ('Somnia', models.CharField(blank=True, max_length=50, null=True)),
                ('Infancia', models.TextField(blank=True, max_length=100, null=True)),
                ('Adulto', models.TextField(blank=True, max_length=100, null=True)),
                ('Patologias', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('-----', '-----'), ('Herpes', 'Herpes'), ('Hepatitis', 'Hepatitis'), ('HTA', 'HTA'), ('Alergias', 'Alergias'), ('Diabetes', 'Diabetes'), ('Tifoidea', 'Tifoidea'), ('TBC', 'TBC'), ('Caries', 'Caries'), ('Rubeola', 'Rubeola'), ('Neoplasis', 'Neoplasis'), ('Otros', 'Otros')], default=Pacientes.models.get_default_servicios, max_length=50, null=True), size=None)),
                ('ha_sido_operado', models.BooleanField(default=False)),
                ('fecha_operacion', models.DateField(blank=True, null=True)),
                ('traumatismo_o_fractura', models.BooleanField(blank=True, null=True)),
                ('Otro', models.TextField(blank=True, null=True)),
                ('fum', models.DateField(blank=True, null=True)),
                ('fpp', models.DateField(blank=True, null=True)),
                ('edad_gestacional', models.IntegerField(blank=True, null=True)),
                ('menarquia', models.IntegerField(blank=True, null=True)),
                ('rm_rit_menstr', models.CharField(blank=True, max_length=50, null=True)),
                ('irs', models.CharField(blank=True, max_length=50, null=True)),
                ('no_de_parejas', models.IntegerField(blank=True, null=True)),
                ('flujo_genital', models.CharField(blank=True, max_length=100, null=True)),
                ('gestas', models.IntegerField(blank=True, null=True)),
                ('partos', models.IntegerField(blank=True, null=True)),
                ('cesareas', models.IntegerField(blank=True, null=True)),
                ('abortos', models.IntegerField(blank=True, null=True)),
                ('anticonceptivos', models.CharField(blank=True, max_length=100, null=True)),
                ('anticonceptivos_tipo', models.CharField(blank=True, max_length=100, null=True)),
                ('anticonceptivos_tiempo', models.CharField(blank=True, max_length=100, null=True)),
                ('anticonceptivos_ultima_toma', models.DateField(blank=True, null=True)),
                ('cirugia_ginecologica', models.TextField(blank=True, null=True)),
                ('otros_ginecologicos', models.TextField(blank=True, null=True)),
                ('digest_halitosis', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_boca_seca', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_masticacion', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_disfagia', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_pirosis', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_nausea', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_vomito_hematemesis', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_colicos', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_dolor_abdominal', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_meteorismo', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_flatulencias', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_constipacion', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_diarrea', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_rectorragias', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_melenas', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_pujo', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_tenesmo', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_ictericia', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_coluria', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_acolia', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_prurito_cutaneo', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_hemorragias', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_prurito_anal', models.BooleanField(blank=True, default=False, null=True)),
                ('digest_hemorroides', models.BooleanField(blank=True, default=False, null=True)),
                ('Comentarios_digestivo', models.CharField(blank=True, max_length=200, null=True)),
                ('cardio_tos_seca', models.BooleanField(default=False)),
                ('cardio_tos_espasmodica', models.BooleanField(default=False)),
                ('cardio_hemoptisis', models.BooleanField(default=False)),
                ('cardio_dolor_precordial', models.BooleanField(default=False)),
                ('cardio_palpitaciones', models.BooleanField(default=False)),
                ('cardio_cianosis', models.BooleanField(default=False)),
                ('cardio_edema', models.BooleanField(default=False)),
                ('cardio_acufenos', models.BooleanField(default=False)),
                ('cardio_fosfenos', models.BooleanField(default=False)),
                ('cardio_sincope', models.BooleanField(default=False)),
                ('cardio_lipotimia', models.BooleanField(default=False)),
                ('cardio_cefaleas', models.BooleanField(default=False)),
                ('Comentarios_cardio', models.CharField(blank=True, max_length=200, null=True)),
                ('pulso_carotideo', models.CharField(blank=True, max_length=50, null=True)),
                ('pulso_humeral', models.CharField(blank=True, max_length=50, null=True)),
                ('pulso_radial', models.CharField(blank=True, max_length=50, null=True)),
                ('pulso_femoral', models.CharField(blank=True, max_length=50, null=True)),
                ('pulso_popliteo', models.CharField(blank=True, max_length=50, null=True)),
                ('pulso_tibial_posterior', models.CharField(blank=True, max_length=50, null=True)),
                ('pulso_pedio', models.CharField(blank=True, max_length=50, null=True)),
                ('pulso_carotideo_izq', models.CharField(blank=True, max_length=50, null=True)),
                ('pulso_humeral_izq', models.CharField(blank=True, max_length=50, null=True)),
                ('pulso_radial_izq', models.CharField(blank=True, max_length=50, null=True)),
                ('pulso_femoral_izq', models.CharField(blank=True, max_length=50, null=True)),
                ('pulso_popliteo_izq', models.CharField(blank=True, max_length=50, null=True)),
                ('pulso_tibial_posterior_izq', models.CharField(blank=True, max_length=50, null=True)),
                ('pulso_pedio_izq', models.CharField(blank=True, max_length=50, null=True)),
                ('resp_tos', models.BooleanField(default=False)),
                ('resp_disnea', models.BooleanField(default=False)),
                ('resp_dolor_toracico', models.BooleanField(default=False)),
                ('resp_hemoptisis', models.BooleanField(default=False)),
                ('resp_cianosis', models.BooleanField(default=False)),
                ('resp_vomica', models.BooleanField(default=False)),
                ('resp_alteraciones_voz', models.BooleanField(default=False)),
                ('Comentarios_respiratorio', models.CharField(blank=True, max_length=200, null=True)),
                ('genital_criptorquidea', models.BooleanField(default=False)),
                ('genital_fimosis', models.BooleanField(default=False)),
                ('genital_funcion_sexual', models.BooleanField(default=False)),
                ('genital_sangrado_genital', models.BooleanField(default=False)),
                ('genital_flujo_leucorrea', models.BooleanField(default=False)),
                ('genital_dolor_ginecologico', models.BooleanField(default=False)),
                ('genital_prurito_vulvar', models.BooleanField(default=False)),
                ('Comentarios_genital', models.CharField(blank=True, max_length=200, null=True)),
                ('Poliuria', models.BooleanField(default=False)),
                ('Anuria', models.BooleanField(default=False)),
                ('Oliguria', models.BooleanField(default=False)),
                ('Nicturia', models.BooleanField(default=False)),
                ('Opsuria', models.BooleanField(default=False)),
                ('Disuria', models.BooleanField(default=False)),
                ('Tenesmo_vesical', models.BooleanField(default=False)),
                ('Urgencia', models.BooleanField(default=False)),
                ('Chorro', models.BooleanField(default=False)),
                ('Enuresis', models.BooleanField(default=False)),
                ('Incontinencia', models.BooleanField(default=False)),
                ('Ninguna', models.BooleanField(default=False)),
                ('urin_volumen_orina', models.CharField(blank=True, max_length=100, null=True)),
                ('urin_color_orina', models.CharField(blank=True, max_length=100, null=True)),
                ('urin_olor_orina', models.CharField(blank=True, max_length=100, null=True)),
                ('urin_aspecto_orina', models.CharField(blank=True, max_length=100, null=True)),
                ('urin_dolor_lumbar', models.BooleanField(default=False)),
                ('urin_edema_palpebral_sup', models.BooleanField(default=False)),
                ('urin_edema_palpebral_inf', models.BooleanField(default=False)),
                ('urin_edema_renal', models.BooleanField(default=False)),
                ('urin_hipertension_arterial', models.BooleanField(default=False)),
                ('urin_datos_clinicos_anemia', models.BooleanField(default=False)),
                ('Comentarios_urinario', models.CharField(blank=True, max_length=200, null=True)),
                ('Palidez', models.BooleanField(default=False)),
                ('Astenia', models.BooleanField(default=False)),
                ('Adinamia', models.BooleanField(default=False)),
                ('Otros', models.CharField(blank=True, max_length=100, null=True)),
                ('hemato_hemorragias', models.BooleanField(default=False)),
                ('hemato_adenopatias', models.BooleanField(default=False)),
                ('hemato_esplenomegalia', models.BooleanField(default=False)),
                ('Comentarios_anemia', models.CharField(blank=True, max_length=200, null=True)),
                ('endocr_bocio', models.BooleanField(default=False)),
                ('endocr_letargia', models.BooleanField(default=False)),
                ('endocr_bradipsiquia_idia', models.BooleanField(default=False)),
                ('endocr_intolerancia_calor_frio', models.BooleanField(default=False)),
                ('endocr_nerviosismo', models.BooleanField(default=False)),
                ('endocr_hiperquinesis', models.BooleanField(default=False)),
                ('endocr_caracteres_sexuales', models.BooleanField(default=False)),
                ('endocr_galactorrea', models.BooleanField(default=False)),
                ('endocr_amenorrea', models.BooleanField(default=False)),
                ('endocr_ginecomastia', models.BooleanField(default=False)),
                ('endocr_obesidad', models.BooleanField(default=False)),
                ('endocr_ruborizacion', models.BooleanField(default=False)),
                ('Comentarios_endocrino', models.CharField(blank=True, max_length=200, null=True)),
                ('cuello_tiroides', models.CharField(blank=True, max_length=100, null=True)),
                ('cuello_musculos', models.CharField(blank=True, max_length=100, null=True)),
                ('cuello_ganglios_linfaticos', models.CharField(blank=True, max_length=100, null=True)),
                ('ecv_cervical_asc', models.TextField(blank=True, max_length=100, null=True)),
                ('ecv_cervical_desc', models.TextField(blank=True, max_length=100, null=True)),
                ('ecv_cervical_obs', models.TextField(blank=True, null=True)),
                ('ecv_dorsal_asc', models.TextField(blank=True, max_length=100, null=True)),
                ('ecv_dorsal_desc', models.TextField(blank=True, max_length=100, null=True)),
                ('ecv_dorsal_obs', models.TextField(blank=True, null=True)),
                ('ecv_lumbosacra_asc', models.TextField(blank=True, max_length=100, null=True)),
                ('ecv_lumbosacra_desc', models.TextField(blank=True, max_length=100, null=True)),
                ('ecv_lumbosacra_obs', models.TextField(blank=True, null=True)),
                ('mmss_hombros_cs_ad', models.CharField(blank=True, max_length=50, null=True)),
                ('mmss_hombros_cs_ab', models.CharField(blank=True, max_length=50, null=True)),
                ('mmss_hombros_cs_f', models.CharField(blank=True, max_length=50, null=True)),
                ('mmss_hombros_cs_e', models.CharField(blank=True, max_length=50, null=True)),
                ('mmss_hombros_cv_ad', models.CharField(blank=True, max_length=50, null=True)),
                ('mmss_hombros_cv_ab', models.CharField(blank=True, max_length=50, null=True)),
                ('mmss_hombros_cv_f', models.CharField(blank=True, max_length=50, null=True)),
                ('mmss_hombros_cv_e', models.CharField(blank=True, max_length=50, null=True)),
                ('art_codo_e', models.CharField(blank=True, max_length=50, null=True)),
                ('art_codo_f', models.CharField(blank=True, max_length=50, null=True)),
                ('art_muneca_e', models.CharField(blank=True, max_length=50, null=True)),
                ('art_muneca_f', models.CharField(blank=True, max_length=50, null=True)),
                ('art_muneca_p', models.CharField(blank=True, max_length=50, null=True)),
                ('art_muneca_s', models.CharField(blank=True, max_length=50, null=True)),
                ('art_pulgar_ab', models.CharField(blank=True, max_length=50, null=True)),
                ('art_pulgar_ad', models.CharField(blank=True, max_length=50, null=True)),
                ('art_pulgar_e', models.CharField(blank=True, max_length=50, null=True)),
                ('art_pulgar_f', models.CharField(blank=True, max_length=50, null=True)),
                ('art_dedos_f', models.CharField(blank=True, max_length=50, null=True)),
                ('art_dedos_e', models.CharField(blank=True, max_length=50, null=True)),
                ('art_dedos_ifp', models.CharField(blank=True, max_length=50, null=True)),
                ('art_cadera_ab', models.CharField(blank=True, max_length=50, null=True)),
                ('art_cadera_ad', models.CharField(blank=True, max_length=50, null=True)),
                ('art_cadera_f', models.CharField(blank=True, max_length=50, null=True)),
                ('art_cadera_e', models.CharField(blank=True, max_length=50, null=True)),
                ('art_tobillo_f', models.CharField(blank=True, max_length=50, null=True)),
                ('art_tobillo_e', models.CharField(blank=True, max_length=50, null=True)),
                ('art_subastragalina_f', models.CharField(blank=True, max_length=50, null=True)),
                ('art_subastragalina_ev', models.CharField(blank=True, max_length=50, null=True)),
                ('nasal_mucosa', models.CharField(blank=True, max_length=100, null=True)),
                ('nasal_cochas', models.CharField(blank=True, max_length=100, null=True)),
                ('nasal_vascularizacion', models.CharField(blank=True, max_length=100, null=True)),
                ('me_pulso_carotideo_derecho', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pulso Carotídeo Derecho')),
                ('me_pulso_carotideo_izquierdo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pulso Carotídeo Izquierdo')),
                ('me_pulso_humeral_derecho', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pulso Humeral Derecho')),
                ('me_pulso_humeral_izquierdo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pulso Humeral Izquierdo')),
                ('me_pulso_radial_derecho', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pulso Radial Derecho')),
                ('me_pulso_radial_izquierdo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pulso Radial Izquierdo')),
                ('me_pulso_femoral_derecho', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pulso Femoral Derecho')),
                ('me_pulso_femoral_izquierdo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pulso Femoral Izquierdo')),
                ('me_pulso_popliteo_derecho', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pulso Poplíteo Derecho')),
                ('me_pulso_popliteo_izquierdo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pulso Poplíteo Izquierdo')),
                ('me_pulso_tibial_posterior_derecho', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pulso Tibial Posterior Derecho')),
                ('me_pulso_tibial_posterior_izquierdo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pulso Tibial Posterior Izquierdo')),
                ('me_pulso_pedio_derecho', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pulso Pedio Derecho')),
                ('me_pulso_pedio_izquierdo', models.CharField(blank=True, max_length=50, null=True, verbose_name='Pulso Pedio Izquierdo')),
                ('ascitis', models.BooleanField(default=False)),
                ('Estado_Conciencia', models.TextField(blank=True, null=True)),
                ('glasgow_apertura_ojos_respuesta', models.CharField(blank=True, max_length=100, null=True)),
                ('glasgow_apertura_ojos_puntuacion', models.IntegerField(blank=True, null=True)),
                ('glasgow_respuesta_verbal_respuesta', models.CharField(blank=True, max_length=100, null=True)),
                ('glasgow_respuesta_verbal_puntuacion', models.IntegerField(blank=True, null=True)),
                ('glasgow_respuesta_motora_respuesta', models.CharField(blank=True, max_length=100, null=True)),
                ('glasgow_respuesta_motora_puntuacion', models.IntegerField(blank=True, null=True)),
                ('reflejo_fotomotor_tamano', models.CharField(blank=True, max_length=100, null=True)),
                ('reflejo_fotomotor_relaciones', models.CharField(blank=True, max_length=100, null=True)),
                ('reflejo_fotomotor_respuestas_luz', models.CharField(blank=True, max_length=100, null=True)),
                ('par_craneal_iii_oculomotor', models.CharField(blank=True, max_length=100, null=True)),
                ('par_craneal_iv_patetico', models.CharField(blank=True, max_length=100, null=True)),
                ('par_craneal_vi_motor_ocular_externo', models.CharField(blank=True, max_length=100, null=True)),
                ('par_craneal_iii_oculomotor_cv', models.CharField(blank=True, max_length=100, null=True)),
                ('par_craneal_iv_patetico_cv', models.CharField(blank=True, max_length=100, null=True)),
                ('par_craneal_vi_motor_ocular_externo_cv', models.CharField(blank=True, max_length=100, null=True)),
                ('retina_relacion_arterio_venosa', models.CharField(blank=True, max_length=100, null=True)),
                ('retina_macula', models.CharField(blank=True, max_length=100, null=True)),
                ('campos_visuales_opciones', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('-----', '-----'), ('Extravasaciones', 'Extravasaciones'), ('Vasos Tortuosos', 'Vasos Tortuosos'), ('Catarata', 'Catarata'), ('Exudado Cotonoso', 'Exudado Cotonoso'), ('No aplica', 'No aplica')], default=Pacientes.models.get_default_servicios, max_length=50, null=True), size=None)),
                ('Conducta_auditiva', models.CharField(blank=True, max_length=50, null=True)),
                ('Membrana_timpatica', models.CharField(blank=True, max_length=50, null=True)),
                ('conduccion_osea', models.CharField(blank=True, max_length=50, null=True)),
                ('conduccion_area', models.CharField(blank=True, max_length=50, null=True)),
                ('Naso_palpebral', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Superciliar', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Maseterino', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Bicipital', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Estilo_Radial', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Tricipital', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Cubito_Pronador', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Medio_Pubiano', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Rotuliano', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Corneo_Palpebral', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Conjuntivo_Palpebral', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Palatino_o_Velo_Palatino', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Faringeo', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Tusigeno', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Vomito', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Respiratorio', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Miccional', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Defecatorio', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Aquileo', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Babinski', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Chaddock', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Oppenheim', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Gordon', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Kerning', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('Brudzinski', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(blank=True, choices=[('1', '1'), ('2', '2'), ('3', '3'), ('4', '4')], max_length=10, null=True), size=None)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='PacienteHistoriaClinica', to='Pacientes.paciente')),
            ],
        ),
        migrations.CreateModel(
            name='ConsentimientoInformado',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('nombre', models.CharField(max_length=200, verbose_name='Nombre del Paciente')),
                ('fecha', models.DateField(default=datetime.date.today)),
                ('edad', models.IntegerField(blank=True, null=True)),
                ('temp', models.CharField(blank=True, max_length=50, null=True, verbose_name='Temperatura')),
                ('peso', models.CharField(blank=True, max_length=50, null=True, verbose_name='Peso')),
                ('talla', models.CharField(blank=True, max_length=50, null=True, verbose_name='Talla')),
                ('ta', models.CharField(blank=True, max_length=50, null=True, verbose_name='T/A (Tensión Arterial)')),
                ('rp', models.TextField(blank=True, null=True, verbose_name='Rp. (Receta o Recomendación)')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consentimientos_simplificados', to='Pacientes.paciente')),
            ],
        ),
        migrations.CreateModel(
            name='Receta',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(auto_now_add=True)),
                ('diagnostico', models.TextField()),
                ('medicamento', models.TextField()),
                ('indicaciones', models.TextField()),
                ('edad', models.IntegerField(blank=True, null=True)),
                ('talla', models.FloatField(blank=True, null=True)),
                ('peso', models.FloatField(blank=True, null=True)),
                ('ta', models.CharField(blank=True, max_length=20, null=True, verbose_name='T/A')),
                ('fc', models.IntegerField(blank=True, null=True, verbose_name='F.C.')),
                ('sat_o2', models.IntegerField(blank=True, null=True, verbose_name='SAT. O2')),
                ('medico', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='Pacientes.paciente')),
            ],
        ),
        migrations.AddField(
            model_name='paciente',
            name='doctor_responsable',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='pacientes_asignados', to='Pacientes.doctor', verbose_name='Doctor Responsable'),
        ),
        migrations.CreateModel(
            name='FarmaciaProfile',
            fields=[
                ('id', models.BigAutoField(editable=False, primary_key=True, serialize=False)),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='farmacia_profile', to=settings.AUTH_USER_MODEL)),
                ('doctor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='farmacias', to='Pacientes.doctor', verbose_name='Doctor Asociado')),
            ],
        ),
        migrations.CreateModel(
            name='Cita',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('fecha', models.DateField(verbose_name='Fecha de la Cita')),
                ('hora_inicio', models.TimeField(verbose_name='Hora de Inicio')),
                ('hora_fin', models.TimeField(verbose_name='Hora de Fin')),
                ('motivo', models.CharField(choices=[('Consulta', 'Consulta General'), ('Seguimiento', 'Seguimiento'), ('Terapia', 'Sesión de Terapia'), ('Emergencia', 'Emergencia'), ('Otro', 'Otro')], default='Consulta', max_length=50, verbose_name='Motivo de la Cita')),
                ('notas', models.TextField(blank=True, null=True, verbose_name='Notas Adicionales')),
                ('estado', models.CharField(choices=[('Pendiente', 'Pendiente'), ('Confirmada', 'Confirmada'), ('Completada', 'Completada'), ('Cancelada', 'Cancelada'), ('Reprogramada', 'Reprogramada')], default='Pendiente', max_length=20, verbose_name='Estado de la Cita')),
                ('fecha_creacion', models.DateTimeField(auto_now_add=True)),
                ('fecha_actualizacion', models.DateTimeField(auto_now=True)),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='citas_como_doctor', to=settings.AUTH_USER_MODEL, verbose_name='Doctor')),
                ('paciente', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='citas', to='Pacientes.paciente', verbose_name='Paciente')),
            ],
            options={
                'verbose_name': 'Cita',
                'verbose_name_plural': 'Citas',
                'ordering': ['fecha', 'hora_inicio'],
                'unique_together': {('doctor', 'fecha', 'hora_inicio')},
            },
        ),
    ]
